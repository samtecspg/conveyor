version: '2.1'

#
# Note the ES default version is locked in by the ":-x.x.x" part of the
#  "$ELASTIC_VERSION:-x.x.x" string (with is in MULTIPLE PLACES below)
#
# Vars that can be set to override things via a .env file:
#  ELASTIC_VERSION
#  MODEL_DIR
#  ES_DATA
#  ES_CONFIG

services:
  ingestapi:
    build: .
    ports: ['0.0.0.0:4000:4000']
    networks: ['ingest-net']
  node-red:
    image: nodered/node-red-docker
    ports: ['0.0.0.0:1880:1880','0.0.0.0:38022:38022']
    networks: ['ingest-net']
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-5.4.0}
    environment: ['http.host=0.0.0.0', 'transport.host=127.0.0.1']
    ports: ['0.0.0.0:9200:9200']
    environment:
      - ES_JAVA_OPTS=-Xmx1g -Xms1g
    networks: ['ingest-net']
    volumes: ["${ES_DATA:-./es-data}:/usr/share/elasticsearch/data", "${ES_CONFIG:-./es-config}:/etc/elasticsearch/"]
    # Check that Elasticsearch is responding before hitting it with real requests.
    healthcheck:
      test: ['CMD', 'curl', '-f', '-u', 'elastic:changeme', 'http://localhost:9200']
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-5.4.0}
    ports: ['0.0.0.0:5601:5601']
    networks: ['ingest-net']
    depends_on: {elasticsearch: {condition: service_healthy}}
    # Check that Kibana is responding before loading dashboards etc.
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5601/login']

networks: {ingest-net: {}}
